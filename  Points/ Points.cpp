        while(fast != NULL && fast ->next != NULL)
        ListNode *slow = head;
        
        // till fast and fast-> next not reaches NULL
        // we will increment fast by 2 step and slow by 1 step
        // making two pointers fast and slow and assignning them to head
        ListNode *fast = head;
            return false;
        
        if(head == NULL)
    
        // if head is NULL then return false;
    bool hasCycle(ListNode *head) {
public:
class Solution {
[3,2,0,-4]
