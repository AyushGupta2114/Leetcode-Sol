                xor_result ^= num
            return xor_result

        total_xor_sum = 0
        def xor_of_subset(subset):
            xor_result = 0
            for num in subset:
        result = []
        backtrack(0, [])

                path.pop()

            for i in range(start, len(nums)):
                path.append(nums[i])
                backtrack(i + 1, path)
        def backtrack(start, path):
            result.append(path[:])
    def subsetXORSum(self, nums: List[int]) -> int:

class Solution:
from typing import List
[
